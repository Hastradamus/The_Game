<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>trigger_box_s</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Usage and text

/* Usage:
    TextBoxTrigger is used along side: TextBox, DiagOpenAnim, ..., and is used
    to create a text box to convey information to the user.
    To use this, create an instance of this object in the room
    editor, right click on the instance you created, and click 'creation code'.
    then assign each line you want to appear like this
    line[0] = 'hey';
    line[1] = 'whats up?';
    NOTE* the dialog box will only be open as long as the player is touching
    the instance of the object */


/* xloc, yloc: the x and y positions that the animations of the dialog
box will be opened at */
xloc = (view_wport[0] / 2) - (sprite_width /2);
yloc = (view_hport[0] - sprite_height) - 50;

box = noone;

/* overlapping: variable will be true only when the player is overlapping
the instance. Global to the object and is set on player collide, and in the step */
overlapping = false;

/* lastTouched: used to help destory the correct textBox trigger even when 
the player isn't touching it */
lastTouched = false;


//triggerBox = instance_find(TextBoxTrigger, 1);
//write text lines for the text box in the following way
line[0] = "example text";
//line[0] = "more text";
//or if you like the following way
//line = newArray("example text", "more text!");

//box = instance_create(0, 0, TextBox);


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[0] = -2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Destroy TextBox when player stops colliding with it

if (instance_exists(Player)) {

/* triggerBox: get the instance_id of the TextBoxTrigger that the player is
colliding with. This will be used so that when the TextBox is created,
the text that is written on it can be set specifically to that one TextBoxTrigger */
var triggerBox = instance_position(Player.x, Player.y, TextBoxTrigger);

/* if triggerBox != noone: the above assignment of triggerBox will be
noone if the player is not touching any instances of TextBoxTrigger. in that
case move to the else block */
if (triggerBox != noone){
    
    /*  if (instance_find(TextBox, 1) == noone): make sure that there
    are no instances of TextBox before proceeding. This is to protect from
    overlaying multiple TextBox-es */
    if (instance_find(TextBox, 1) == noone){
    
        
        //create the opening animation
        instance_create(xloc, yloc, DialogOpenAnim);
        
        //create the textBox
        box = instance_create(0, 0, TextBox);
        
        /* assign the text that will be in the TextBox to the
        text of the trigger we got a handle on a few lines earlier */
        box.line = triggerBox.line;
        
        /*if alarm[0] != -1: make sure the alarm hasn't been set.
        this chuck of logic is to deal with making sure that
        text boxes don't get destroyed too quickly */
        if (alarm[0] == -1) {
            /*alarm[0]: alarm to make sure that a text box isn't destroyed
            for a minimum time even if the
            player is no longer colliding with the trigger */
            alarm[0] = room_speed * 3;
            //show_debug_message("alarm: " + string(alarm[0]));
        }
    }
}
/* else: if the player is not overlapping any TextBoxTriggers */
else {
    /* if( box != noone): if there isnt an instance of box, then do nothing */
    if( box != noone){
    
        /* if (alarm[0] == -2): alarm[0] is set to -2 after its done counting
        down. garunteeing (bad spelling) that the textBox isn't destoyed until
        the box has been around at least as long as the alarm lasts */
        if (alarm[0] == -2){
            
            /* alarm[0]: set to -1 so that the timer can be reinstated at
            the next step */
            alarm[0] = -1;
            /* if there is an instace of a TextBox named 
            box then destory it */
            with box instance_destroy();
        
            /* set box equal to noone for the above check in the next cycle */
            box = noone;
        
            /* create a closing animation for the destoryed box */
            instance_create_diag_close_anim();
        }
    }
}
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="Player">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with TextBoxTrigger lastTouched = false;
self.lastTouched = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
