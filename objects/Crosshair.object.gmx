<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>crosshair_s</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>controllerPriority = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>self.visible = true;
if(!global.paused){
if (!controllerPriority) {
    x = mouse_x;
    y = mouse_y;
    depth = Player.depth -1;
}
else {
    depth = Player.depth -1;
    var deadVal = 0.20; // the max position that my controller "sticks" to.
        // i.e. the highest value it will stay at without me holding it there
        
    var rshv = gamepad_axis_value(0, gp_axisrh); //Right Stick Horizontal Value: so I dont need to write so much
    var rsvv = gamepad_axis_value(0, gp_axisrv); //Right Stick Vertical Value: so I dont need to write so much
    
    //checks to see if the right stick is in a neutral position.
    if (rshv &lt;= deadVal &amp;&amp; rshv &gt;= -deadVal &amp;&amp; rsvv &lt;= deadVal &amp;&amp; rsvv &gt;= -deadVal)
        var rsNeut = true; // Right Stick Neutral
    else var rsNeut = false;
    
    var lshv = gamepad_axis_value(0, gp_axislh); //Left Stick Horizontal Value: so I dont need to write so much
    var lsvv = gamepad_axis_value(0, gp_axislv); //Left Stick Vertical Value: so I dont need to write so much
    
    //checks to see if the left stick is in a neutral position.
    if (lshv &lt;= deadVal &amp;&amp; lshv &gt;= -deadVal &amp;&amp; lsvv &lt;= deadVal &amp;&amp; lsvv &gt;= -deadVal)
        var lsNeut = true; //Left Stick Neutral
    else var lsNeut = false;
    
    var heady = Player.y + 8 - (Player.sprite_height/2); // roughly the position of the sprites head
    
    if(!rsNeut) {
        x = Player.x + 200 * rshv;
        y = heady + 200 * rsvv;
    }
    else if (rsNeut &amp;&amp; !lsNeut){
        x = Player.x + 200 * lshv;
        y = heady + 200 * lsvv;
    }
    else{
        depth = Player.depth + 1;
        x = Player.x;
        y = Player.y;
    }
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="Player">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>self.visible = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
