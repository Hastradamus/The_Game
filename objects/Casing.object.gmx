<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>casing2_s</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>rotSpeed=-50
rotSpeed+=random(100)
vSpeed=0
hSpeed=0
grav=.45
onGround=false
playSound=true
depth=Wall.depth+1
onVertWall=false
onHorizWall=false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!onGround&amp;&amp;!global.paused){

    //movement 
    x+=hSpeed;
    y+=vSpeed;
    image_angle+=rotSpeed;
    vSpeed+=grav;
    
    //horizontal collision
    if(collision_point(x+5*sign(vSpeed),y,Wall,0,1))hSpeed*=-1
    
    //vertical collision
    if(collision_line(x+3,y+vSpeed,x-3,y+vSpeed,Wall,0,1)){
        
        //play sound on first bounce
        if(playSound&amp;&amp;!global.mute){
            sfx = audio_play_sound(casing_sfx, 2, false);
            audio_sound_pitch(sfx, random_range(0.95, 1.05));
            playSound=false//stops it from repeating
        }
        
        //bounce
        if(vSpeed&gt;1.4)vSpeed*=-.3
        
        //land
        else{
            onGround=true
            if(instance_place(x,y,VerticalWall)){
                platform=instance_place(x,y,VerticalWall)
                onVertWall=true
            }
            if(instance_place(x,y,HorizontalWall)){
                platform=instance_place(x,y,HorizontalWall)
                onHorizWall=true
            }
        }
    }
}
if(onVertWall){
    y+=platform.moveSpeed
}
if(onHorizWall){
    x+=platform.moveSpeed
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
