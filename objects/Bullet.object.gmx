<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>Bullet_s</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///bullet instanciation code
startingX = x; // used for distance to distruction
startingY = y; // same^
shakeCalls = 0;
Speed=15;
image_speed=.2
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*****************************************************************************
This function checks to see if there is an enemy at the bullet's location.
In particular, the variable 'hit' takes on the identity of the thing the bullet is
colliding with. So 'hit.hp -=1' reduces the enemy's hp by 1
**************************************************************************/
if(!control.paused){
var deathDistance = 800;// distance before bullet is destoryed
var distance = point_distance(startingX, startingY, x, y);
hit = instance_place(x,y,Baddie);

if (hit != noone){
    enemyGetHit_script(hit);
    instance_destroy(); 
}

shotBomb=instance_place(x,y,Bomb);
if (distance &gt;= deathDistance) instance_destroy();
if(shotBomb!=noone){
    shotBomb.thrownByBoss=false;
    shotBomb.hSpeed= 15*cos(direction*pi/180);
    shotBomb.vSpeed= -15*sin(direction*pi/180);
    shotBomb.bulletCollided = true;
    instance_destroy();
};

shotRock=instance_place(x,y,Rock);
if(shotRock!=noone){
    shotRock.hSpeed= 12*cos(direction*pi/180);
    shotRock.vSpeed= -9*sin(direction*pi/180);
    Scoreboard.myScore+=Scoreboard.numRocks;
    instance_destroy();
}

//FR independence
speed=25;//=Speed*global.delta;
//this wasnt working-ben
}
else speed=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
