<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>octopus_s</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//This is not something to be taken seriously
playerTouched=false;//set to true when you touch the octopus
jumpBoost=Player.jumpPower+6;//jump higher
speedBoost=Player.maxSpeed+4;//move faster
stuckToWall=false;//makes you latch onto walls
stuckTimer=-1;//so that you can disengage
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(playerTouched){
    x=Player.x;
    y=Player.y-44;//put the octopus on the player's head
    Player.jumpPower=jumpBoost;//increase the player's jump
    Player.maxSpeed=speedBoost;
    global.musicSelector=2;
}

if(instance_place(x,y,Player))//latch onto the player
    playerTouched=true;

//if(Player.octopusOnHead==false){
    //instance_destroy();
//}

if(collision_line(x-sprite_width,y-sprite_height,x+sprite_width,y-sprite_height,Wall,0,1)){
    stuckToWall=true;
}

if(collision_rectangle(x-sprite_width,y-sprite_height,x+sprite_width,y+sprite_height,Wall,0,1)){
    stuckToWall=true;
}

else stuckToWall=false;

if(stuckTimer&gt;=0)stuckTimer-=1;

if(stuckTimer&lt;0&amp;&amp;stuckToWall&amp;&amp;playerTouched){
    Player.vSpeed=0;
    //Player.hSpeed=0;
}//makes the player stick to the wall/ceiling*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///disengage from wall
if(stuckToWall&amp;&amp;playerTouched){
    stuckToWall=false;
    stuckTimer=30;//so that you don't just stick immediately again
    Player.vSpeed=-Player.jumpPower*.8;//jump up
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Make it a mask

if(playerTouched){
    draw_sprite(octopus_s,0,x,y);//makes the octopus show up in front of the player's face instead of behind

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="87">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(stuckToWall&amp;&amp;playerTouched){
    stuckToWall=false;
    stuckTimer=30;//so that you don't just stick immediately again
    Player.vSpeed=-Player.jumpPower*.8;//jump up
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
