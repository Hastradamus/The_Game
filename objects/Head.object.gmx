<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>player_head</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///variable initialization

/* headShake: to control 'recoil' of players head */
headShake = 0;
shotx = noone;
shoty = noone;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///reset headShake

//headShake is set in headRecoil_script
headShake = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///handles location of players eye for bullets

/*
shoty = Player.y + 10 - (Player.sprite_height / 2);
shotx = noone;

if(Player.playerDir == Player.facing.right) 
    shotx = Player.x + 13;
else if (Player.playerDir == Player.facing.left)
    shotx = Player.x - 20;
else if (Player.myDirection == 2)
    shotx = Player.x + Player.sprite_width / 2;
else shotx = Player.x - Player.sprite_width / 2;
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw the head














shoty = Player.y + 10 - (Player.sprite_height / 2);
shotx = noone;

if(Player.playerDir == Player.facing.right) 
    shotx = Player.x + 13;
else if (Player.playerDir == Player.facing.left)
    shotx = Player.x - 20;
else if (Player.myDirection == 2)
    shotx = Player.x + Player.sprite_width / 2;
else shotx = Player.x - Player.sprite_width / 2;













//adjust the xoffset if the player is facing left
// its all magic numbers
var xoffset = Player.headx;
var yoffset = Player.heady;
var runningOffset = Player.headx;

 /* adjust: so i don't have to change more than two
 variables to make my adjustments */
var adjustx = 8;
var adjusty = 4;

/* put the head in the right place when facing
left. By default its set for right */
if Player.playerDir == Player.facing.left 
    xoffset = Player.headx - 10;
    
/* put the head in the right place when running */
if Player.runningDir == Player.running.right &amp;&amp; Player.playerDir == Player.facing.right {
    xoffset = Player.headx + adjustx;
    yoffset = Player.heady + adjusty;
}

if Player.runningDir == Player.running.left &amp;&amp; Player.playerDir == Player.facing.left {
    xoffset = xoffset - (adjustx -2);
    yoffset = Player.heady + adjusty;
}


var rot = Player.pdir; /* the default rotation of the 
    sprite according to the players position and the mouse */
    
    
/* headShake is a global variable for the head object which
is set in a script when a button is shot to control 'recoil' */
rot = rot + headShake;

//show_debug_message("rot: " + string(rot));

var radirot = rot * pi / 180;
var roty = shoty * cos(radirot) + xoffset * sin(radirot);
var rotx = shoty * sin(radirot) - xoffset * cos(radirot);

show_debug_message("rotx :" + string(rotx) + ", roty :"
    + string(roty));
draw_sprite(crosshair_s, -1, rotx, roty);
draw_sprite(crosshair_s, -1, xoffset, yoffset);

//draw_line(xoffset, yoffset, shotx, shoty);
//var dist = point_distance(xoffset, yoffset, shotx, shoty);
//show_debug_message("dist: " + string(dist));
draw_sprite_ext(
                 player_head, //sprite
                 -1, //subimage
                 xoffset, //x
                 yoffset, //y
                 1, //x scale
                 Player.playerDir, //yscale
                 rot, //roation
                 c_white, //image color
                 1 // alpha
                 );
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
